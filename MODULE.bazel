module(
    name = "rules_rpmbuild",
    version = "0.0.1",
)

bazel_dep(name = "bazel_skylib", version = "1.5.0")
bazel_dep(name = "platforms", version = "0.0.7")
bazel_dep(name = "hermetic_cc_toolchain", version = "2.1.3")

toolchains = use_extension("@hermetic_cc_toolchain//toolchain:ext.bzl", "toolchains")
use_repo(toolchains, "zig_sdk")

register_toolchains(
    "@zig_sdk//toolchain:linux_amd64_gnu.2.31",
    "@zig_sdk//toolchain:linux_arm64_gnu.2.31",
    "@zig_sdk//toolchain:darwin_amd64",
    "@zig_sdk//toolchain:darwin_arm64",
    "@zig_sdk//toolchain:windows_amd64",
    "@zig_sdk//toolchain:windows_arm64",
)

bazel_dep(name = "rules_go", version = "0.44.0")
bazel_dep(name = "gazelle", version = "0.35.0")

bazel_dep(name = "bazel_skylib_gazelle_plugin", version = "1.5.0", dev_dependency = True)

bazel_dep(name = "bazeldnf", version = "0.6.0")

ASPECT_BAZEL_LIB_COMMIT = "5e369bea01691b80dfa1338fe44bc704c31105d9"
bazel_dep(name = "aspect_bazel_lib", version = "2.3.0")
archive_override(
    module_name = "aspect_bazel_lib",
    strip_prefix = "bazel-lib-%s" % ASPECT_BAZEL_LIB_COMMIT,
    integrity = "sha256-M5Pc7QKgw157lrCvJJC2LscfdfRTDhNU1mNmmig97xY=",
    urls = [
        "https://jfrog.booking.com/artifactory/github-release-mirror/bookingcom/bazel-lib/archive/%s.tar.gz" % ASPECT_BAZEL_LIB_COMMIT,
        "https://github.com/bookingcom/bazel-lib/archive/%s.tar.gz" % ASPECT_BAZEL_LIB_COMMIT,
    ]
)

BAZELDNF_COMMIT = "1f927b5c5153e6098cb438259e352df24a0bd9c9"

archive_override(
    module_name = "bazeldnf",
    integrity = "sha256-2m27r6+ejOS7i+iZuUoXfjU+cE3W8AImokgcvPKzC3c=",
    strip_prefix = "bazeldnf-%s" % BAZELDNF_COMMIT,
    urls = [
        "https://github.com/bookingcom/bazeldnf/archive/%s.tar.gz" % BAZELDNF_COMMIT,
    ],
)

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "org_golang_x_sys",
)

bazel_dep(name = "buildifier_prebuilt", version = "6.4.0", dev_dependency = True)

rpm_deps = use_extension("@bazeldnf//:extensions.bzl", "rpm_deps")
rpm_deps.lock_file(
    path = "rpmtree/centos7/filesystem.json",
    rpm_tree_name = "centos7-filesystem",
)
rpm_deps.lock_file(
    path = "rpmtree/centos7/rpm-build.json",
    rpm_tree_name = "centos7-rpm-build",
)
rpm_deps.lock_file(
    path = "rpmbuild/rpm-build-centos9.json",
    rpm_tree_name = "rpm-build-centos9",
)
use_repo(
    rpm_deps,
    "centos7-filesystem",
    "centos7-rpm-build",
    "rpm-build-centos9",
)



# this comes from aspect_bazel_lib MODULE.bazel
bazel_lib_toolchains = use_extension("@aspect_bazel_lib//lib:extensions.bzl", "toolchains")
bazel_lib_toolchains.tar()
bazel_lib_toolchains.coreutils()
use_repo(bazel_lib_toolchains, "bsd_tar_toolchains", "coreutils_toolchains")

register_toolchains(
    # Expand bsd_tar_toolchains
    "@bsd_tar_toolchains//:linux_amd64_toolchain",
    "@bsd_tar_toolchains//:linux_arm64_toolchain",
    "@bsd_tar_toolchains//:windows_amd64_toolchain",
    # host toolchain must be last, as it's only suitable as a fallback on macos
    "@bsd_tar_toolchains//:host_toolchain",
    "@coreutils_toolchains//:all",
)


rpmbuild_toolchains = use_extension("//rpmbuild:extensions.bzl", "toolchains")
rpmbuild_toolchains.patchelf()
rpmbuild_toolchains.reproducible_rpmbuild()
use_repo(rpmbuild_toolchains, "patchelf_toolchains", "reproducible_rpmbuild_toolchains")

register_toolchains(
    "@patchelf_toolchains//:all",
    "@reproducible_rpmbuild_toolchains//:all",
)
